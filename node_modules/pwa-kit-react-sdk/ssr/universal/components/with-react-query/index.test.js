"use strict";

var _index = require("./index");

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _ = require(".");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (c) 2022, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
describe('withReactQuery', function () {
  let windowSpy;
  beforeEach(() => {
    windowSpy = jest.spyOn(window, 'window', 'get');
    jest.spyOn(console, 'warn').mockImplementation(jest.fn());
  });
  afterEach(() => {
    console.warn.mockRestore();
    windowSpy.mockRestore();
  });
  test('Renders correctly', () => {
    const Wrapped = () => /*#__PURE__*/_react.default.createElement("p", null, "Hello world");

    const Component = (0, _index.withReactQuery)(Wrapped);
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(Component, {
      locals: {}
    }));
    expect(wrapper.html()).toContain('Hello world');
  });
  test(`Has working getInitializers method`, () => {
    expect((0, _index.withReactQuery)({}).getInitializers().length).toBe(1);
    expect((0, _index.withReactQuery)({
      getInitializers: () => ['xyz']
    }).getInitializers().length).toBe(2);
  });
  test(`Has working getHOCsInUse method`, () => {
    expect((0, _index.withReactQuery)({}).getHOCsInUse().length).toBe(1);
    expect((0, _index.withReactQuery)({
      getHOCsInUse: () => ['xyz']
    }).getHOCsInUse().length).toBe(2);
  });
});